H  72 ++++++++++ ++++++++++ ++++++++++ ++++++++++ ++++++++++ ++++++++++ ++++++++++ ++ . >
e 101 ++++++++++ ++++++++++ ++++++++++ ++++++++++ ++++++++++ ++++++++++ ++++++++++ ++++++++++ ++++++++++ ++++++++++ + . >
l 108 ++++++++++ ++++++++++ ++++++++++ ++++++++++ ++++++++++ ++++++++++ ++++++++++ ++++++++++ ++++++++++ ++++++++++ ++++++++ . >
l 108 ++++++++++ ++++++++++ ++++++++++ ++++++++++ ++++++++++ ++++++++++ ++++++++++ ++++++++++ ++++++++++ ++++++++++ ++++++++ . >
o 111 ++++++++++ ++++++++++ ++++++++++ ++++++++++ ++++++++++ ++++++++++ ++++++++++ ++++++++++ ++++++++++ ++++++++++ ++++++++ +++ . >
   32 ++++++++++ ++++++++++ ++++++++++ ++ . >
W  87 ++++++++++ ++++++++++ ++++++++++ ++++++++++ ++++++++++ ++++++++++ ++++++++++ ++++++++++ +++++++ . >
o 111 ++++++++++ ++++++++++ ++++++++++ ++++++++++ ++++++++++ ++++++++++ ++++++++++ ++++++++++ ++++++++++ ++++++++++ ++++++++++ + . >
r 114 ++++++++++ ++++++++++ ++++++++++ ++++++++++ ++++++++++ ++++++++++ ++++++++++ ++++++++++ ++++++++++ ++++++++++ ++++++++++ ++++ . >
l 108 ++++++++++ ++++++++++ ++++++++++ ++++++++++ ++++++++++ ++++++++++ ++++++++++ ++++++++++ ++++++++++ ++++++++++ ++++++++ . >
d 100 ++++++++++ ++++++++++ ++++++++++ ++++++++++ ++++++++++ ++++++++++ ++++++++++ ++++++++++ ++++++++++ ++++++++++ . >
!  33 ++++++++++ ++++++++++ ++++++++++ +++ . >
\n 10 ++++++++++ .


メモリの各セルが1バイトでオーバーフローとアンダーフローに対応(%= 256)していないと実行できない
    Hello, World!を出力するコード
        +++++ +++               Set Cell #0 to 8
        [
            >++++               Add 4 to Cell #1; this will always set Cell #1 to 4
            [                   as the cell will be cleared by the loop
                >++             Add 4*2 to Cell #2
                >+++            Add 4*3 to Cell #3
                >+++            Add 4*3 to Cell #4
                >+              Add 4 to Cell #5
                <<<<-           Decrement the loop counter in Cell #1
            ]                   Loop till Cell #1 is zero
            >+                  Add 1 to Cell #2
            >+                  Add 1 to Cell #3
            >-                  Subtract 1 from Cell #4
            >>+                 Add 1 to Cell #6
            [<]                 Move back to the first zero cell you find; this will
                                be Cell #1 which was cleared by the previous loop
            <-                  Decrement the loop Counter in Cell #0
        ]                       Loop till Cell #0 is zero

        The result of this is:
        Cell No :   0   1   2   3   4   5   6
        Contents:   0   0  72 104  88  32   8
        Pointer :   ^

        >>.                     Cell #2 has value 72 which is 'H'
        >---.                   Subtract 3 from Cell #3 to get 101 which is 'e'
        +++++ ++..+++.          Likewise for 'llo' from Cell #3
        >>.                     Cell #5 is 32 for the space
        <-.                     Subtract 1 from Cell #4 for 87 to give a 'W'
        <.                      Cell #3 was set to 'o' from the end of 'Hello'
        +++.----- -.----- ---.  Cell #3 for 'rl' and 'd'
        >>+.                    Add 1 to Cell #5 gives us an exclamation point
        >++.                    And finally a newline from Cell #6
    minimized form
        +[-->-[>>+>-----<<]<--<---]>-.>>>+.>>..+++[.>]<<<<.+++.------.<<-.>>>>+.
    全てのASCIIコード文字を出力するコード
        .+[.+]
    入力をそのまま出力
        ,[.,]
    メモリのセルサイズ算出
        ++++++++[>++++++++<-]>[<++++>-]
        +<[>-<
            [>++++<-]>[<++++++++>-]<[>++++++++<-]
            +>[>
                ++++++++++[>+++++<-]>+.-.[-]<
            <[-]<->] <[>>
                +++++++[>+++++++<-]>.+++++.[-]<
        <<-]] >[>
            ++++++++[>+++++++<-]>.[-]<
        <-]<
        +++++++++++[>+++>+++++++++>+++++++++>+<<<<-]>-.>-.+++++++.+++++++++++.<.
        >>.++.+++++++..<-.>>-
        [[-]<]

ASCIIコードが127~0の文字を出力するコード
    ++++++++++ [>++++++++++ +++ <-] >--- [.-]
ASCIIコードが0~127の文字を出力するコード
    ++++++++++ [>++++++++++ +++ <-] >--- [>.+ <-]
12文字の入力をそのまま出力
    ++++++++++ ++ [>,. <-]
2~100の素数
    >++++[<++++++++>-]>++++++++[<++++++>-]<++.<.>+.<.>++.<.>++.<.>------..<.>
    .++.<.>--.++++++.<.>------.>+++[<+++>-]<-.<.>-------.+.<.> -.+++++++.<.>
    ------.--.<.>++.++++.<.>---.---.<.> +++.-.<.>+.+++.<.>--.--.<.> ++.++++.<.>
    ---.-----.<.>+++++.+.<.>.------.<.> ++++++.----.<.> ++++.++.<.> -.-----.<.>
    +++++.+.<.>.--.
値の移動
    +++++          # 5 0 0 0
    >[-]<[->+<]    # 0 5 0 0
1~100のFizzBuzz
    ++++++[->++++>>+>+>-<<<<<]>[<++++>>+++>++++>>+++>+++++>+++++>>>>>>++>>++<
    <<<<<<<<<<<<<-]<++++>+++>-->+++>->>--->++>>>+++++[->++>++<<]<<<<<<<<<<[->
    -[>>>>>>>]>[<+++>.>.>>>>..>>>+<]<<<<<-[>>>>]>[<+++++>.>.>..>>>+<]>>>>+<-[
    <<<]<[[-<<+>>]>>>+>+<<<<<<[->>+>+>-<<<<]<]>>[[-]<]>[>>>[>.<<.<<<]<[.<<<<]
    >]>.<<<<<<<<<<<]
加算: memory[0]+memory[1]=memory[2]
    +++ >           # memory[0]=3
    ++++ >          # memory[1]=4
    <<
    [->>>+<<<]      # memory[0]をmemory[3]へ移動
    >>>
    [-<+<<+>>>]     # memory[2]にmemory[3]を足し, memory[0]にmemory[3]を足す
    <<
    [->>+<<]        # memory[1]をmemory[3]へ移動
    >>
    [-<+<+>>]       # memory[2]にmemory[3]を足し, memory[1]にmemory[3]を足す
    <.              # memory[2]を表示

lower to upper
    ### init: ##################################
    >>++++++++[->++++++++<]>                # {3} = 0x40
    >>>+++++++++[->++++++++++<]>            # {7} = 0x5A   ptr=7

    ### main: ##################################
    [<<,                                    # {5} = getchar()

    ## 00 00 00 40 00 *ch 00 5A 00 00 00
    [->+<<+<<+>>>]                          # {2:4:6} = !{5}
    <<<[->>>+<<<]>>>                        # {5}     = !{2}
    ## 00 00 00 40 ch *ch ch 5A 00 00 00

    >>[->+>>+<<<]>                          # {8:10}  = !{7}
    ## 00 00 00 40 ch ch ch 00 *5A 00 5A
    [                                       # while( {8} ) do
        <<[->+>>+<<<]>>                     #   {7:9} = !{6}
        >[-<<<+>>>]<                        #   {6}   = !{9}
        <[[-]<->]>                          #   if({7}) then decr{6}
        -                                   #   decr {8}
    ]                                       # end
    >>[-<<<+>>>]<<<<<                       # {7} = !{10}
    ## 00 00 00 40 ch *ch ans1 5A 00 00 00
    ##   ans1 = 0   iff   input le 5A

    <<[-<+<<+>>>]<                          # {0:2}  = !{3}
    ## 40 00 *40 00 ch ch ans1 5A 00 00 00
    [                                       # while( {2} ) do
        >>[-<+<<+>>>]<<                     #   {1:3} = !{4}
        <[->>>+<<<]>                        #   {4}   = !{1}
        >[[-]>-<]<                          #   if({3}) then decr{4}
        -                                   #   decr {2}
    ]                                       # end
    <<[->>>+<<<]>>>>>                       # {3} = !{0}
    ## 00 00 00 40 ans2 *ch ans1 5A 00 00 00
    ##   ans2 = 0   iff   input le 40

    # if(ans2) if(not ans1) {5} add 0x20
    <[[-]                                   # if( {4} ) then do
        >++++++++++++++++++++++++++++++++   #   {5} add 0x20
        >[[-]                               #   if( !{6} ) then do
        <-------------------------------->  #     {5} sub 0x20
        ]<<                                 #   end
    ]>>[-]<                                 # end; !{6}

    ## 00 00 00 40 00 *ch 00 5A 00 00 00
    .>>] # putchar {5}

memory[0]をmemory[1]に複製
    ++++++++++
    [>+>+ <<-]  # memory[0]をmemory[1]とmemory[2]に複製
    >>[<<+ >>-]   # memory[2]にmemory[0]に移動
    <<

