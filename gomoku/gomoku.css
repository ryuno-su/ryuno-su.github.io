@import url("https://fonts.googleapis.com/css?family=Roboto+Mono|Noto+Sans+JP");
html {
  font-family: "Roboto Mono", "Noto Sans JP", monospace;
  font-weight: normal;
  font-size: 20px;
  box-sizing: border-box;
  text-rendering: optimizeSpeed;
  scroll-behavior: smooth;

  overscroll-behavior: none;
  text-size-adjust: 100%;
  -webkit-text-size-adjust: 100%;
  touch-action: manipulation;

  background-color: rgb(200, 200, 200);
}
*, *::before, *::after {
  font-family: inherit;
  font-size: 100%;
  box-sizing: inherit;
  text-rendering: optimizeSpeed;
  scroll-behavior: smooth;

  overscroll-behavior: none;
  text-size-adjust: 100%;
  -webkit-text-size-adjust: 100%;
  touch-action: manipulation;
}

/* CSS変数定義 */
:root {
  --board-length: calc(8 * 80px);
  @media (orientation: portrait) {
    --board-length: 99vw;
  }
  @media (orientation: landscape) {
    --board-length: 70dvh;
  }
  --svg-length: clamp(40px, var(--board-length) / 10, 80px);
  --svg-bg-stroke-length: clamp(1.0px, var(--svg-length) * 1.25 / 80, 1.25px);
  --svg-st-stroke-length: clamp(1.25px, var(--svg-length) * 2.5 / 80, 2.5px);
  --mobile-length: 560px;
}

.hidden {
  display: none;
}

.area {
  margin: 0.2rem;
}

:focus {
  outline: -webkit-focus-ring-color auto 1px;
}

hr {
  border: none;
  border-top: 1px solid black;
}

header {
  font-size: 0.9rem;
  & > h1 {
    font-size: 1.6rem;
    margin-block-start: 0.2rem;
    margin-block-end: 0.2rem;
  }
}

svg {
  font-size: var(--svg-length);
  width: var(--svg-length);
  height: var(--svg-length);
  margin: 0;
  padding: 0;
  & > rect.background {
    width: 100%;
    height: 100%;
    fill: sandybrown;
    stroke: black;
    stroke-width: calc(var(--svg-bg-stroke-length) / 2);
  }
  &:hover {
    cursor: pointer;
    & > rect.background {
      fill: lime;
    }
  }

  &.cell {
    &[data-color="none"] > circle.stone {
      fill: none;
    }
    &[data-color="black"] > circle.stone {
      fill: black;
    }
    &[data-color="white"] > circle.stone {
      fill: white;
    }
    &[data-color="red"] > circle.stone {
      fill: red;
    }
    &[data-color="blue"] > circle.stone {
      fill: blue;
    }
    &[data-color="cyan"] > circle.stone {
      fill: cyan;
    }
    &[data-color="magenta"] > circle.stone {
      fill: magenta;
    }
    &[data-color="yellow"] > circle.stone {
      fill: yellow;
    }
    &[data-color="sentinel"] > circle.stone {
      fill: sandybrown;
    }
  }

  &.highlight {
    & > rect.highlight-stone {
      width: 90%;
      height: 90%;
      fill: none;
      stroke-width: var(--svg-st-stroke-length);
    }
    &[data-color="none"] {
      & > rect.highlight-stone {
        stroke: none;
      }
      & > circle.stone {
        fill: none;
      }
    }
    &[data-color="black"] {
      & > rect.highlight-stone {
        stroke: black;
      }
      & > circle.stone {
        fill: black;
      }
    }
    &[data-color="white"] {
      & > rect.highlight-stone {
        stroke: white;
      }
      & > circle.stone {
        fill: white;
      }
    }
    &[data-color="red"] {
      & > rect.highlight-stone {
        stroke: red;
      }
      & > circle.stone {
        fill: red;
      }
    }
    &[data-color="blue"] {
      & > rect.highlight-stone {
        stroke: blue;
      }
      & > circle.stone {
        fill: blue;
      }
    }
    &[data-color="cyan"] {
      & > rect.highlight-stone {
        stroke: cyan;
      }
      & > circle.stone {
        fill: cyan;
      }
    }
    &[data-color="magenta"] {
      & > rect.highlight-stone {
        stroke: magenta;
      }
      & > circle.stone {
        fill: magenta;
      }
    }
    &[data-color="yellow"] {
      & > rect.highlight-stone {
        stroke: yellow;
      }
      & > circle.stone {
        fill: yellow;
      }
    }
    &[data-color="sentinel"] {
      & > rect.highlight-stone {
        stroke: sandybrown;
      }
      & > circle.stone {
        fill: sandybrown;
      }
    }
  }

  &.assist {
    & > circle.assist-stone {
      fill: none;
      stroke-width: var(--svg-st-stroke-length);
      stroke-dasharray: calc(var(--svg-st-stroke-length) * 2), calc(var(--svg-st-stroke-length) * 2);
    }
    &[data-color="none"] > circle.assist-stone {
      stroke: none;
    }
    &[data-color="black"] > circle.assist-stone {
      stroke: black;
    }
    &[data-color="white"] > circle.assist-stone {
      stroke: white;
    }
    &[data-color="red"] > circle.assist-stone {
      stroke: red;
    }
    &[data-color="blue"] > circle.assist-stone {
      stroke: blue;
    }
    &[data-color="cyan"] > circle.assist-stone {
      stroke: cyan;
    }
    &[data-color="magenta"] > circle.assist-stone {
      stroke: magenta;
    }
    &[data-color="yellow"] > circle.assist-stone {
      stroke: yellow;
    }
    &[data-color="sentinel"] > circle.assist-stone {
      stroke: sandybrown;
    }
  }

  &.hint {
    & > circle.hint-stone {
      fill: none;
      stroke-width: var(--svg-st-stroke-length);
    }
    &[data-color="none"] {
      & > circle.hint-stone {
        stroke: none;
      }
      & > circle.stone {
        fill: none;
      }
    }
    &[data-color="black"] {
      & > circle.hint-stone {
        stroke: black;
      }
      & > circle.stone {
        fill: black;
      }
    }
    &[data-color="white"] {
      & > circle.hint-stone {
        stroke: white;
      }
      & > circle.stone {
        fill: white;
      }
    }
    &[data-color="red"] {
      & > circle.hint-stone {
        stroke: red;
      }
      & > circle.stone {
        fill: red;
      }
    }
    &[data-color="blue"] {
      & > circle.hint-stone {
        stroke: blue;
      }
      & > circle.stone {
        fill: blue;
      }
    }
    &[data-color="cyan"] {
      & > circle.hint-stone {
        stroke: cyan;
      }
      & > circle.stone {
        fill: cyan;
      }
    }
    &[data-color="magenta"] {
      & > circle.hint-stone {
        stroke: magenta;
      }
      & > circle.stone {
        fill: magenta;
      }
    }
    &[data-color="yellow"] {
      & > circle.hint-stone {
        stroke: yellow;
      }
      & > circle.stone {
        fill: yellow;
      }
    }
    &[data-color="sentinel"] {
      & > circle.hint-stone {
        stroke: sandybrown;
      }
      & > circle.stone {
        fill: sandybrown;
      }
    }
  }
}

span.color-text {
  font-weight: bold;
  text-transform: uppercase;
  &[data-color="none"] {
    color: rgb(200, 200, 200);
  }
  &[data-color="black"] {
    color: black;
  }
  &[data-color="white"] {
    color: white;
    :is(ul#AI_LIST &) {
      text-shadow: 1px 1px 2px gray;
    }
  }
  &[data-color="red"] {
    color: red;
  }
  &[data-color="blue"] {
    color: blue;
  }
  &[data-color="cyan"] {
    color: cyan;
  }
  &[data-color="magenta"] {
    color: magenta;
  }
  &[data-color="yellow"] {
    color: yellow;
    :is(ul#AI_LIST &) {
      text-shadow: 1px 1px 2px gray;
    }
  }
  &[data-color="sentinel"] {
    color: sandybrown;
  }
}

details#parameter-area {
  & > summary {
    width: fit-content;
    &:hover {
      cursor: pointer;
    }
    &::after {
      content: ":";
    }
  }
  & > ul.details-content {
    border: 1px solid black;
    border-radius: 3px;
    font-size: 0.9rem;
    margin: 0px;
    padding: 4px;
    width: auto;

    display: block;
    word-break: keep-all;
    white-space: nowrap;
    overflow-x: auto;
    & ul#AI_LIST {
      display: inline-block;
      margin: 0px;
      margin-inline-end: 0.2rem;
      width: fit-content;
      & li {
        vertical-align: middle;
        margin-block-start: -0.2rem;
        width: fit-content;
        &.shown {
          display: inline-block;
        }
        & label.label {
          display: inline;
        }
        & .label:after {
          padding-inline: 0.4rem 0.0rem;
        }
        & span:is([data-color="white"], [data-color="yellow"]) {
          text-shadow: 0px 0px 1px black;
        }
      }
    }
  }
  & li {
    list-style: none;
    line-height: 1.4;
    vertical-align: middle;
    width: fit-content;
    &.shown {
      display: list-item;
    }
    & label, & span[name="label"] {
      display: inline-block;
      vertical-align: middle;
      width: 3.9rem;
    }
    & .label:after {
      display: inline-block;
      content: "=";
      padding-inline: 0.2rem 0.0rem;
    }
  }
  & input {
    &[type="number"], &[type="text"] {
      appearance: none;
      width: 1.1rem;
    }
    :is(&[type="number"], &[type="text"]):invalid {
      outline: 2px dashed red;
      outline-offset: -1px;
    }
    &[type="number"]::-webkit-inner-spin-button,
    &[type="number"]::-webkit-outer-spin-button {
      appearance: none;
    }
    &[type="checkbox"] {
      display: inline-block;
      margin: 0px;
      vertical-align: middle;
      width: 1lh;
      height: 1lh;
      ul#AI_LIST & {
        line-height: 1;
      }
    }
  }
  & ul#AI_LIST,
  & input:is([type="number"], [type="text"]),
  & select {
    display: inline-block;
    line-height: 1.05;
    height: 1.05lh;
    vertical-align: middle;
    border: none;
    border-radius: 3px;

    color: black;
    background-color: white;
    outline: 1px solid black;
    opacity: 1;
  }
  & ul#AI_LIST.disabled,
  & ul#AI_LIST.disabled label.label,
  & input:disabled,
  & select:disabled {
    color: rgb(170, 170, 170);
    background-color: rgba(239, 239, 239, 0.3);
    outline-color: rgb(118, 118, 118);
    opacity: 0.7;
    text-shadow: none;
  }
  & :is(input, select, button):valid:focus {
    outline: -webkit-focus-ring-color auto 1px;
  }
  & ul#AI_LIST,
  & input:is([type="number"], [type="text"]) {
    padding: 0.1rem 0.1rem;
  }
  & select {
    padding: 0.1rem 0.0rem;
    height: 1.1lh;
    outline: none;
    border: 1px solid black;
    &:disabled {
      border-color: rgb(118, 118, 118);
    }
  }
}

button {
  appearance: none;
  display: inline-block;
  cursor: pointer;
  text-align: center;
  text-transform: uppercase;
  color: black;
  background-color: rgb(239, 239, 239);
  outline: 1px solid black;
  border: none;
  border-radius: 3px;
  line-height: 1;
  margin: 0px;
  padding: 0.1rem 0.2rem;
  &:disabled {
    color: rgb(170, 170, 170);
    background-color: rgba(239, 239, 239, 0.3);
    outline-color: rgb(118, 118, 118);
    opacity: 0.7;
  }
  details#parameter-area > & {
    margin-block-start: 0.5rem;
  }
  div#button-area > & {
    margin-block-start: 0.25rem;
  }
}

div#board-area {
  font-size: 0;
  max-width: 100%;
  max-height: calc(99vh - 4.5rem);
  overflow: auto;
  & > table {
    table-layout: fixed;
    border-collapse: collapse;
    border-spacing: 0;
    margin: 0 auto;
    & :is(tr, td, th) {
      margin: 0;
      padding: 0;
    }
    & th {
      position: sticky;
      top: 0;
      left: 0;
      font-size: calc(var(--svg-length) / 3.5);
      text-align: center;
      background-color: rgb(200, 200, 200);
      
    }
    & > thead {
      & th {
        z-index: 2;
        width: calc(var(--svg-length));
        height: calc(var(--svg-length) / 2);
      }
      & th:first-of-type {
        z-index: 3;
        width: calc(var(--svg-length) / 2);
        height: calc(var(--svg-length) / 2);
      }
    }
    & > tbody {
      & th {
        z-index: 2;
        width: calc(var(--svg-length) / 2);
        height: calc(var(--svg-length));
      }
      & tr:first-of-type td {
        border-top: calc(var(--svg-bg-stroke-length) * 2) solid black;
      }
      & tr:last-of-type td {
        border-bottom: calc(var(--svg-bg-stroke-length) * 2) solid black;
      }
      & tr td:first-of-type {
        border-left: calc(var(--svg-bg-stroke-length) * 2) solid black;
      }
      & tr td:last-of-type {
        border-right: calc(var(--svg-bg-stroke-length) * 2) solid black;
      }
    }
  }
}

div#info-area {
  & > div {
    &.shown {
      display: block;
    }
    &.hidden {
      display: none;
    }

    &#turn,
    &#message,
    &#result {
      white-space: pre-wrap;
    }

    &#turn::before {
      content: "turn: ";
    }
    &#message::before {
      content: "message: ";
    }
    &#result::before {
      content: "result: ";
    }
  }

  & details#log-area {
    & > summary {
      display: block;
      list-style: none;
      width: fit-content;
      &:hover {
        cursor: pointer;
      }
      &::after {
        content: ":";
      }
      &::-webkit-details-marker {
        display: none;
      }
    }
    & > div#log.details-content {
      display: block;
      resize: vertical;
      overflow-y: auto;
      margin: 0px;
      padding: 4px;
      font-size: 0.9em;
      width: auto;
      height: 6lh;
      border: 1px solid black;
      border-radius: 3px;
      white-space: pre-wrap;
      word-break: break-all;
    }
  }
}

aside {
  font-size: 0.9rem;
  & > h2 {
    font-size: 1.4rem;
    margin-block-start: 0.2rem;
    margin-block-end: 0.2rem;
  }
}

footer {
  font-size: 0.9rem;
}

/* モバイル端末用 */
@media (width < var(--mobile-length)) or (height < var(--mobile-length)) {
  html {
    font-size: 18px;
  }
}
