"use strict";export function exit(t="exit"){throw new Error(t)}export function errorAlert(t="alert"){const r=`Error: ${t}`;return window.setTimeout(()=>window.alert(r),0),r}export function errorLog(t="log"){const r=`Error: ${t}`;return r}export function setMobileDevice(){const t=/ipod|ipad|iphone|macintosh|android/gi;if(t.test(navigator.userAgent)&&"ontouchend"in document){const t=document.querySelectorAll('input[type="number"]');t.forEach(t=>{t.type="text",t.inputMode="numeric",t.pattern="^([1-9][0-9]*|0)$"})}}export function registerEventListener(t,r,n){document.querySelectorAll(r).forEach(r=>{t.split(" ").forEach(t=>{r.addEventListener(t,t=>{n(t)})})})}export function createEnum(...t){return Object.fromEntries(Object.entries(t).map(([t,r])=>[String(r),Number(t)]))}export function createArray2D(t,r,n=0){return[...Array(t)].map(t=>Array(r).fill(n))}export function randomInt(t){return Math.trunc(Math.random()*t)}export function randomIntRange(t,r){return t>r&&([t,r]=[r,t]),t=Math.ceil(t),r=Math.floor(r)+1,randomInt(r-t)+t}export function randomIntPdf(t){const r=t.length,n=new Array(r+1).fill(0);for(let e=0;e<r;e++)n[e+1]=n[e]+t[e];const e=n.slice(-1)[0],o=Math.random()*e;return n.bisect_left(o)}export function intToAlp(t){if(!(0<=t&&t<26))return;const r="a".charCodeAt(),n=String.fromCharCode(t+r);return n}export function alpToInt(t){if(1!==t.length)return;const r="a".charCodeAt(),n=t.charCodeAt()-r;return 0<=n&&n<26?n:void 0}export function isInRange(t,r,n){return r<=t&&t<n}export function isBetween(t,r,n){return r<=t&&t<=n}export function clamp(t,r,n){return Math.min(Math.max(t,r),n)}export function range(t,r,n=1){const e=Math.trunc((r-t+n-Math.sign(n))/n);return[...Array(e)].map((r,e)=>e*n+t)}export function rangeInt(t){return[...Array(t).keys()]}export function rangeIntAll(t,r){const n=r-t>=0?1:-1,e=t,o=r+n;return range(e,o,n)}export function range2Int(t,r){return[...Array(t*r)].map((t,n)=>{const e=Math.trunc(n/r),o=n%r;return[e,o]})}export function range2IntAll(t,r,n,e){const o=r-t>=0?1:-1,a=t,c=r+o,i=(c-a)*o,u=e-n>=0?1:-1,f=n,p=e+u,s=(p-f)*u;return[...Array(i*s)].map((r,e)=>{const a=Math.trunc(o*e/s)+t,c=u*e%s+n;return[a,c]})}export function forRange(t,r,n,e){const o=Math.trunc((r-t+n-Math.sign(n))/n);[...Array(o)].forEach((r,o)=>{e(o*n+t)})}export function forRangeInt(t,r){[...Array(t)].forEach((t,n)=>{r(n)})}export function forRangeIntAll(t,r,n){const e=r-t>=0?1:-1,o=t,a=r+e;forRange(o,a,e,n)}export function forRange2Int(t,r,n){[...Array(t*r)].map((t,e)=>{const o=Math.trunc(e/r),a=e%r;n(o,a)})}export function forRange2IntAll(t,r,n,e,o){const a=r-t>=0?1:-1,c=t,i=r+a,u=(i-c)*a,f=e-n>=0?1:-1,p=n,s=e+f,l=(s-p)*f;[...Array(u*l)].map((r,e)=>{const c=Math.trunc(a*e/l)+t,i=f*e%l+n;o(c,i)})}export async function trampoline(t,...r){let n=await t(...r);for(;"function"==typeof n;)n=n();return n}