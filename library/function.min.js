"use strict";export function exit(t="exit"){throw new Error(t)}export function errorAlert(t="alert"){const n=`Error: ${t}`;return window.setTimeout(()=>window.alert(n),0),n}export function errorLog(t="log"){const n=`Error: ${t}`;return n}export function setMobileDevice(){const t=/ipod|ipad|iphone|macintosh|android/gi;if(t.test(navigator.userAgent)&&"ontouchend"in document){const t=document.querySelectorAll('input[type="number"]');t.forEach(t=>{t.type="text",t.inputMode="numeric",t.pattern="^([1-9][0-9]*|0)$"})}}export function registerEventListener(t,n,r){document.querySelectorAll(n).forEach(n=>{t.split(" ").forEach(t=>{n.addEventListener(t,t=>{r(t)})})})}export function createEnum(t){return Object.fromEntries(Object.entries(t).map(([t,n])=>[String(n),Number(t)]))}export function createArray2D(t,n,r=0){return[...Array(t)].map(t=>Array(n).fill(r))}export function randomInt(t){return Math.trunc(Math.random()*t)}export function randomIntRange(t,n){return t>n&&([t,n]=[n,t]),t=Math.ceil(t),n=Math.floor(n)+1,randomInt(n-t)+t}export function randomIntPdf(t){const n=t.length,r=new Array(n+1).fill(0);for(let e=0;e<n;e++)r[e+1]=r[e]+t[e];const e=r.slice(-1)[0],o=Math.random()*e;return r.bisect_left(o)}export function intToAlp(t){if(!(0<=t&&t<26))return;const n="a".charCodeAt(),r=String.fromCharCode(t+n);return r}export function alpToInt(t){if(1!==t.length)return;const n="a".charCodeAt(),r=t.charCodeAt()-n;return 0<=r&&r<26?r:void 0}export function ordinal(t){const n=Math.abs(t),r=n%100,e=n%10;return 10<=r&&r<=20?"th":1===e?"st":2===e?"nd":3===e?"rd":"th"}export function isInRange(t,n,r){return n<=t&&t<r}export function isBetween(t,n,r){return n<=t&&t<=r}export function clamp(t,n,r){return Math.min(Math.max(t,n),r)}export function roundDigit(t,n){const r=Math.pow(10,Math.trunc(n));return Math.round(t/r)*r}export function range(t,n,r=1){const e=Math.trunc((n-t+r-Math.sign(r))/r);return[...Array(e)].map((n,e)=>e*r+t)}export function rangeInt(t){return[...Array(t).keys()]}export function rangeIntAll(t,n){const r=n-t>=0?1:-1,e=t,o=n+r;return range(e,o,r)}export function range2Int(t,n){return[...Array(t*n)].map((t,r)=>{const e=Math.trunc(r/n),o=r%n;return[e,o]})}export function range2IntAll(t,n,r,e){const o=n-t>=0?1:-1,a=t,c=n+o,u=(c-a)*o,i=e-r>=0?1:-1,f=r,p=e+i,s=(p-f)*i;return[...Array(u*s)].map((n,e)=>{const a=Math.trunc(o*e/s)+t,c=i*e%s+r;return[a,c]})}export function forRange(t,n,r,e){const o=Math.trunc((n-t+r-Math.sign(r))/r);[...Array(o)].forEach((n,o)=>{e(o*r+t)})}export function forRangeInt(t,n){[...Array(t)].forEach((t,r)=>{n(r)})}export function forRangeIntAll(t,n,r){const e=n-t>=0?1:-1,o=t,a=n+e;forRange(o,a,e,r)}export function forRange2Int(t,n,r){[...Array(t*n)].map((t,e)=>{const o=Math.trunc(e/n),a=e%n;r(o,a)})}export function forRange2IntAll(t,n,r,e,o){const a=n-t>=0?1:-1,c=t,u=n+a,i=(u-c)*a,f=e-r>=0?1:-1,p=r,s=e+f,l=(s-p)*f;[...Array(i*l)].map((n,e)=>{const c=Math.trunc(a*e/l)+t,u=f*e%l+r;o(c,u)})}export async function trampoline(t,...n){let r=await t(...n);for(;"function"==typeof r;)r=r();return r}