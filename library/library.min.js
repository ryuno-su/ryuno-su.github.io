"use strict";String.prototype.forEach=function(t){Array.prototype.forEach.call(this,t)},Array.prototype.sum=function(){return this.reduce((t,r)=>t+r,0)},Array.prototype.min=function(){return this.reduce((t,r)=>Math.min(t,r))},Array.prototype.max=function(){return this.reduce((t,r)=>Math.max(t,r))},Array.prototype.random=function(){const t=Math.trunc(Math.random()*this.length);return this[t]},Array.prototype.numSort=function(t=!1){return this.sort((r,o)=>{const n=t?-1:1;return n*(r-o)}),this},Array.prototype.toNumSorted=function(t=!1){return[...this].numSort(t)},Array.prototype.multiSort=function(t){for(const[r,o]of t.toReversed())this.sort((t,n)=>{let e=0;t[r]<n[r]&&(e=-1),t[r]>n[r]&&(e=1);const i=o?-1:1;return i*e});return this},Array.prototype.toMultiSorted=function(t){return[...this].multiSort(t)},Array.prototype.shuffle=function(){for(let t=this.length-1;t>0;t--){const r=Math.trunc(Math.random()*(t+1));[this[t],this[r]]=[this[r],this[t]]}return this},Array.prototype.toShuffled=function(){return[...this].shuffle()},Array.prototype.filterIndex=function(t){return this.flatMap((r,o,n)=>t(r,o,n)?o:[])},Array.prototype.select=function(t){return t.map(t=>this[t])},Array.prototype.bisect=function(t,r=((t,r)=>t<=r)){let o=-1,n=this.length;for(;Math.abs(n-o)>1;){const e=Math.trunc((n+o)/2);r(t,this[e])?n=e:o=e}return n},Array.prototype.bisect_left=function(t,r=((t,r)=>t>=r)){let o=-1,n=this.length;for(;Math.abs(o-n)>1;){const e=Math.trunc((o+n)/2);r(t,this[e])?o=e:n=e}return o},Object.prototype.forEach=function(t){Object.keys(this).forEach(r=>t(this[r],r,this))},Node.prototype.emptyChild=function(){for(;this.firstChild;)this.removeChild(this.firstChild);return this};export*from"./const.min.js";export*from"./class.min.js";export*from"./function.min.js";export*from"./closure.min.js";