window.onload=(()=>{"use strict";function t(){e(),s.ontouchmove=s.onmousemove=(t=>{const e=t.offsetX,i=t.offsetY;if(e<h.left)return;if(e>h.right)return;if(i<h.top)return;if(i>h.bottom)return;let n=e;n=Math.max(n,h.left+60*l*d),n=Math.min(n,h.right-85*l*d),v.center.x=n,v.center.y=v.center.y});let t=!0;s.ontouchend=s.onmouseup=(e=>{const i=e.offsetX,n=e.offsetY;if(i<h.left||h.right<i)return;if(n<h.top||h.bottom<n)return;if(!t)return;t=!1,setTimeout(()=>t=!0,a),v.isActive=!0,y.set(v.id,v);const o=m[g.type].radius;let r=i;r=Math.max(r,h.left+60*l*d),r=Math.min(r,h.right-85*l*d),v=new u(new Vector2D(r,h.top+21.5*l*d-o),p,g.type),g=new u(new Vector2D((h.right+s.width)/2+15*l,h.top+90*l),p,randomIntPdf(m.map(t=>t.odds)))}),i()}function e(){y=new Map,x=0,b=Math.max(b,x),C=0;const t=randomIntPdf(m.map(t=>t.odds)),e=m[t].radius;v=new u(new Vector2D(h.left+60*l*d,h.top+21.5*l*d-e),p,t),g=new u(new Vector2D((h.right+s.width)/2+15*l,h.top+90*l),p,randomIntPdf(m.map(t=>t.odds)))}function i(){C=requestAnimationFrame(i),o.save(),o.clearRect(0,0,s.width,s.height),o.restore(),(()=>{const t=h.left/2-18*l,e=h.top+64*l;o.save(),o.textAlign="center",o.textBaseline="middle",o.fillStyle="white",o.font="900 60px cursive",o.fillText(`${x}`,t,e-40*l),o.fillStyle="goldenrod",o.font="1000 30px cursive",o.fillText("BESTSCORE",t,e+20*l),o.fillStyle="saddlebrown",o.font="950 30px cursive",o.fillText("BESTSCORE",t,e+20*l),o.fillStyle="white",o.font="900 30px cursive",o.fillText("BESTSCORE",t,e+20*l),o.font="900 40px cursive",o.fillText(`${b}`,t,e+50*l),o.restore()})(),o.save(),g.draw(),o.restore(),(()=>{const t=c,e=t.width,i=t.height,n=156*l/e,s=0,r=0,a=e,m=i,f=a*n,u=m*n,w=v.center.x,p=h.top-u;o.drawImage(t,s,r,a,m,w,p,f,u),v.draw(),o.save(),o.beginPath(),o.strokeStyle="white",o.lineWidth=8*d,o.moveTo(v.center.x,v.center.y+v.info.radius),o.lineTo(v.center.x,h.bottom),o.stroke(),o.closePath(),o.restore()})();for(const t of[...y.values()].toSorted((t,e)=>{const i=new Vector2D(t.center.y,t.center.x),n=new Vector2D(e.center.y,e.center.x);return i.lt(n)?-1:i.gt(n)?1:0}))t.draw().update().collisionWall().collisionBall()}function n(){(()=>{const t=s.width/6,e=5*s.height/6;o.save(),o.font="900 60px cursive",o.textAlign="center",o.textBaseline="middle",o.fillText("ゲームオーバー",t,e),o.restore()})(),cancelAnimationFrame(C)}const s=document.querySelector("canvas#canvas");s.width=window.innerWidth,s.height=window.innerHeight;const o=s.getContext("2d"),r=document.querySelectorAll("div#images > img.fruit"),c=document.querySelector("div#images > img.character"),l=window.innerWidth/1503,d=(window.innerHeight,window.devicePixelRatio/1.5),h=(()=>{const t=790*l*d,e=1e3*l*d,i=21.5*l*d;return{left:s.width/2-t/2,right:s.width/2+t/2,top:s.height/2-(308-i)*l,bottom:s.height/2-(308-i)*l+e}})(),a=800,m=(()=>{class t{constructor(t,e,i,n,s,o){this.name=t,this.image=e,this.radius=i,this.mass=n,this.point=s,this.odds=o}}return[new t("cherry",r[0],59,1e3,1,20),new t("strawberry",r[1],74,980,3,20),new t("grape",r[2],113,960,6,20),new t("dekopon",r[3],122,940,10,20),new t("persimmon",r[4],156,920,15,20),new t("apple",r[5],193,900,21,0),new t("pear",r[6],230,880,28,0),new t("peach",r[7],280,860,36,0),new t("pineapple",r[8],316,840,45,0),new t("melon",r[9],389,820,55,0),new t("watermelon",r[10],460,800,66,0)].map((t,e)=>(t.radius*=.5*l*d,t.point=1+e*(e+3)/2,t))})(),f={gravity:new Vector2D(0,10),deltaTime:.125,elastic:0,damping:.99,friction:.8};class u{constructor(t,e,i){this.id=w++,this.center=t,this.velocity=e,this.isActive=!1,this.isInit=!0,this.isCollided=!1,this.type=i,this.info=m[i]}draw(){this.id;const t=this.center,e=(this.velocity,this.isActive,this.isInit,this.isCollided,this.type,this.info),i=(e.name,e.image),n=e.radius,s=(e.mass,e.point,e.odds,i.width),r=i.height,c=n/(s/2),l=0,d=0,h=s,a=r,m=h*c,f=a*c,u=t.x-m/2,w=t.y-f+m/2;return o.save(),o.beginPath(),o.drawImage(i,l,d,h,a,u,w,m,f),o.closePath(),o.restore(),this}update(){this.id;const t=this.center,e=this.velocity,i=this.isActive,n=(this.isInit,this.isCollided),s=(this.type,this.info),o=(s.name,s.image,s.radius,s.mass,s.point,s.odds,f.gravity),r=f.deltaTime,c=(f.elastic,f.damping);f.friction;if(i)return this.center=t.add(e.mul(r)),this.velocity=e.add(o.mul(r)),this.velocity=this.velocity.mul(c),n&&this.center.distance(t)<ZERO.MILI&&(this.center=t,this.velocity=p),this.isCollided=!1,this}collisionWall(){this.id,this.center,this.velocity;const t=this.isActive,e=(this.isInit,this.isCollided,this.type,this.info),i=(e.name,e.image,e.radius),s=(e.mass,e.point,e.odds,f.gravity,f.deltaTime,f.elastic),o=(f.damping,f.friction);if(!t)return;const r={left:h.left+i,right:h.right-i,top:h.top+i,bottom:h.bottom-i};return this.center.x<r.left&&(this.center.x=r.left,this.velocity.x*=-s,this.isCollided=!0),this.center.x>r.right&&(this.center.x=r.right,this.velocity.x*=-s,this.isCollided=!0),this.center.y<r.top?this.isInit||n():this.isInit=!1,this.center.y>r.bottom&&(this.center.y=r.bottom,this.velocity.y*=-s,this.velocity.x*=o,this.isCollided=!0),this}collisionBall(){const t=this.id,e=this.center,i=this.velocity,n=this.isActive,s=(this.isInit,this.isCollided,this.type),o=this.info,r=(o.name,o.image,o.radius),c=o.mass,l=o.point,d=(o.odds,f.gravity,f.deltaTime,f.elastic);f.damping,f.friction;if(n){for(const n of[...y.values()].toSorted((t,e)=>{const i=new Vector2D(t.center.y,t.center.x),n=new Vector2D(e.center.y,e.center.x);return i.lt(n)?-1:i.gt(n)?1:0})){const o=n.id,h=n.center,a=n.velocity,f=n.isActive,u=(n.isInit,n.isCollided,n.type),w=n.info,p=(w.name,w.image,w.radius),v=w.mass;w.point,w.odds;if(!f)continue;if(t===o)continue;if(e.distance(h)>=r+p)continue;if(this.isCollided=!0,n.isCollided=!0,s===u){if(this.center=e.add(h).div(2),x+=l,y.delete(o),this.type++,this.type>=m.length){x+=m.slice(-1)[0].point,y.delete(t);continue}this.info=m[this.type]}const g=h.sub(e).normalize(),b=g.rotate(Math.PI/2),C=new Vector2D(i.dot(b),i.dot(g)),I=new Vector2D(a.dot(b),a.dot(g)),S=c/v,T=v/c,D=new Vector2D(C.x,(C.y*(S-d)+I.y*(1+d))/(1+S)),V=new Vector2D(I.x,(C.y*(1+d)+I.y*(T-d))/(1+T)),A=e.add(g.mul(r)),M=h.sub(g.mul(p)),P=A.add(M).div(2);this.center=P.sub(g.mul(r)),n.center=P.add(g.mul(p)),this.velocity=b.mul(D.x).add(g.mul(D.y)),n.velocity=b.mul(V.x).add(g.mul(V.y))}return this}}}let w=0;const p=Object.freeze(new Vector2D(0,0));let y=new Map,v=new u(p,p,0),g=new u(p,p,0),x=0,b=0,C=0;t()});